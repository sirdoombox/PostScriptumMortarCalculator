<UserControl x:Class="PostScriptumMortarCalculator.Views.MapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:PostScriptumMortarCalculator.ViewModels"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:panAndZoom="clr-namespace:Wpf.Controls.PanAndZoom;assembly=Wpf.Controls.PanAndZoom"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance viewModels:MapViewModel}">
    <Grid>
        <Grid.Resources>
            <Style TargetType="Ellipse" x:Key="AreaStyleEllipse">
                <Setter Property="Opacity" Value="{Binding Model.Opacity, Mode=OneWay}" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <ComboBox Grid.Column="0" ItemsSource="{Binding Model.AvailableMaps}"
                      SelectedItem="{Binding Model.SelectedMap}"
                      SelectionChanged="{s:Action OnMapSelectionChanged}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding DisplayName}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Label Content="Opacity"
                       Foreground="{DynamicResource MahApps.Brushes.Accent}" />
                <Slider Value="{Binding Model.Opacity}"
                        MinWidth="100"
                        Minimum="0.1"
                        Maximum="1"
                        SmallChange="0.01"
                        LargeChange="0.1"
                        Margin="0,0,5,0" />
                <TextBox Text="{Binding Model.Opacity}" Width="40" />
            </StackPanel>
        </Grid>
        <panAndZoom:ZoomBorder Grid.Row="1"
                               Margin="0 10 0 0"
                               ClipToBounds="True"
                               ZoomSpeed="2"
                               PanButton="Middle"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               KeyDown="{s:Action ZoomBorderKeyDown}"
                               MouseEnter="{s:Action MouseEntered}"
                               EnableConstrains="True"
                               BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                               BorderThickness="1"
                               Focusable="True">
            <Canvas Width="{Binding ElementName=Image, Path=ActualWidth}"
                    Height="{Binding ElementName=Image, Path=ActualHeight}"
                    SizeChanged="{s:Action CanvasSizeChanged}">
                <Image x:Name="Image"
                       Canvas.ZIndex="-10"
                       Source="{Binding Model.SelectedMap.MapPath, IsAsync=True}"
                       MouseDown="{s:Action MouseDown}" />
                <!-- Mortar position grid and associated visuals. -->
                <Ellipse Fill="Blue"
                         Canvas.ZIndex="100"
                         Canvas.Left="{Binding Model.MortarPosition.X}"
                         Canvas.Top="{Binding Model.MortarPosition.Y}"
                         Visibility="{Binding Model.IsMortarPositionSet, Converter={StaticResource BooleanToVisibility}}"
                         IsHitTestVisible="False"
                         Width="5"
                         Height="5">
                    <Ellipse.RenderTransform>
                        <TranslateTransform X="-2.5" Y="-2.5" />
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Ellipse Width="{Binding Model.MortarMinDistancePixels}"
                         Height="{Binding Model.MortarMinDistancePixels}"
                         Canvas.Left="{Binding Model.MortarPosition.X}"
                         Canvas.Top="{Binding Model.MortarPosition.Y}"
                         Visibility="{Binding Model.IsMortarPositionSet, Converter={StaticResource BooleanToVisibility}}"
                         Style="{StaticResource AreaStyleEllipse}"
                         Fill="Purple">
                    <Ellipse.RenderTransform>
                        <TranslateTransform X="{Binding Model.HalfMortarMinDistance}"
                                            Y="{Binding Model.HalfMortarMinDistance}" />
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Ellipse Width="{Binding Model.MortarMaxDistancePixels}"
                         Height="{Binding Model.MortarMaxDistancePixels}"
                         Canvas.Left="{Binding Model.MortarPosition.X}"
                         Canvas.Top="{Binding Model.MortarPosition.Y}"
                         Visibility="{Binding Model.IsMortarPositionSet, Converter={StaticResource BooleanToVisibility}}"
                         Style="{StaticResource AreaStyleEllipse}"
                         Fill="Blue">
                    <Ellipse.RenderTransform>
                        <TranslateTransform X="{Binding Model.HalfMortarMaxDistance}"
                                            Y="{Binding Model.HalfMortarMaxDistance}" />
                    </Ellipse.RenderTransform>
                </Ellipse>
                <!-- Target position indicator -->
                <Ellipse Canvas.Top="{Binding Model.TargetPosition.Y}"
                         Canvas.Left="{Binding Model.TargetPosition.X}"
                         Width="{Binding Model.TargetInnateSplashPixels.X}"
                         Height="{Binding Model.TargetInnateSplashPixels.Y}"
                         Visibility="{Binding Model.IsTargetPositionSet, Converter={StaticResource BooleanToVisibility}}"
                         Style="{StaticResource AreaStyleEllipse}"
                         Fill="Red">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="{Binding Model.TargetInnateSplashOffset.X}"
                                                Y="{Binding Model.TargetInnateSplashOffset.Y}" />
                            <RotateTransform Angle="{Binding Model.Angle, Mode=OneWay}" />
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <!-- Mortar -> Target line -->
                <Line X1="{Binding Model.MortarPosition.X}"
                      Y1="{Binding Model.MortarPosition.Y}"
                      X2="{Binding Model.TargetPosition.X}"
                      Y2="{Binding Model.TargetPosition.Y}"
                      Visibility="{Binding Model.IsMortarAndTargetSet, Converter={StaticResource BooleanToVisibility}}"
                      StrokeThickness="5"
                      Stroke="Red" />
            </Canvas>
        </panAndZoom:ZoomBorder>
        <TextBlock Grid.Row="1"
                   Panel.ZIndex="10"
                   IsHitTestVisible="False"
                   Visibility="{Binding Model.IsHelpVisible, Converter={StaticResource BooleanToVisibility}}"
                   Foreground="{DynamicResource MahApps.Brushes.Accent}"
                   FontWeight="Black"
                   Margin="0 0 5 5"
                   FontSize="15"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Bottom">
            R. Click: Mortar | L. Click: Target | M. Click: Move | M. Scroll: Zoom | H: Show/Hide Help
        </TextBlock>
    </Grid>
</UserControl>